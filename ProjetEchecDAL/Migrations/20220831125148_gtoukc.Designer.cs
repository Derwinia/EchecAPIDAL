// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetEchecDAL;

#nullable disable

namespace ProjetEchecDAL.Migrations
{
    [DbContext(typeof(EchecContext))]
    [Migration("20220831125148_gtoukc")]
    partial class gtoukc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CategorieTournoi", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<Guid>("TournoisId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "TournoisId");

                    b.HasIndex("TournoisId");

                    b.ToTable("CategorieTournoi");
                });

            modelBuilder.Entity("JoueurTournoi", b =>
                {
                    b.Property<Guid>("JoueursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TournoisId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JoueursId", "TournoisId");

                    b.HasIndex("TournoisId");

                    b.ToTable("JoueurTournoi");
                });

            modelBuilder.Entity("ProjetEchecDAL.Entities.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProjetEchecDAL.Entities.Joueur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Droit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Elo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Pseudo")
                        .IsUnique();

                    b.ToTable("Joueurs");
                });

            modelBuilder.Entity("ProjetEchecDAL.Entities.Tournoi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FemmeOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InscriptionLimit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxElo")
                        .HasColumnType("int");

                    b.Property<int>("MaxJoueur")
                        .HasColumnType("int");

                    b.Property<int>("MinElo")
                        .HasColumnType("int");

                    b.Property<int>("MinJoueur")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Ronde")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Tournois");
                });

            modelBuilder.Entity("CategorieTournoi", b =>
                {
                    b.HasOne("ProjetEchecDAL.Entities.Categorie", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetEchecDAL.Entities.Tournoi", null)
                        .WithMany()
                        .HasForeignKey("TournoisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JoueurTournoi", b =>
                {
                    b.HasOne("ProjetEchecDAL.Entities.Joueur", null)
                        .WithMany()
                        .HasForeignKey("JoueursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetEchecDAL.Entities.Tournoi", null)
                        .WithMany()
                        .HasForeignKey("TournoisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
